#!/usr/bin/env bash
sudof(){
    sudo bash -c "$(declare -f $1); $(printf "%q" "$@")"
}
archive_repo(){

  if [ -z "$GIT_ARCHIVE" ]; then
    export GIT_ARCHIVE="/usr/local/src/git";
    sudo mkdir -p GIT_ARCHIVE
  fi

  mkdir -p $GIT_ARCHIVE/$1
  if ! git -C $GIT_ARCHIVE/$1 pull; then
    rm -rf $REPO_DIR
    git clone https://$1.git $GIT_ARCHIVE/$1
  fi

  if [ ! -z "$2" ]; then
    mkdir -p $2
    rm -rf $2
    ln -s $GIT_ARCHIVE/$1 $2
  fi
}

appendtofile(){

    # filename=${!$#}
    filename=${@:$#}

    if ! [ -f  $filename ]; then
      mkdir -p `dirname $filename`
      touch $filename
    fi

    for i in "$@"; do

        if ! [[ "$filename" = "$i" ]]; then

            grep -q -F "$i" $filename || echo -e "$i" >> $filename
        fi

    done
}

include(){

  for file in "$@"; do


    [ -r "$file" ] && [ -f "$file" ] && . "$file"

  done;

}


# source_child_dotfiles(){

#   local caller_file="${BASH_SOURCE[1]}"

#   echo $caller_file

#   local bsname="$(basename -- $caller_file)";

#   local drname="$(dirname $caller_file)";

#   local ext=""

#   if [ ! -z "$1" ]; then
#     ext="$1"
#   fi

#   for file in $drname/${bsname}.d/.*$1; do

#     if [ -r "$file" ] && [ -f "$file" ]; then
#       # echo "$file sourced "
#       . "$file";
#     fi
#   done;
#   unset caller_file bsname drname file
# }

# source_dotfiles(){

#   local caller_file="${BASH_SOURCE[1]}"

#   echo $caller_file

#   local bsname="$(basename -- $caller_file)";

#   local drname="$(dirname $caller_file)";

#   local script_dir=$( cd $drname && pwd )


#   if [ -L "$caller_file" ]; then

#     echo ""

#     echo $(readlink -f "$caller_file")
#   fi


#   # local symlinkdir=$(dirname -- $(readlink -f "$caller_file"))



#   # echo $symlinkdir


#   if [ ! -z "$1" ]; then
#     ext="$1"
#   fi

#   # for file in $drname/.*.$1; do


#   #   # if [ -r "$file" ] && [ -f "$file" ]; then
#   #   #   # echo "$file sourced "
#   #   #   . "$file";
#   #   # fi
#   # done;
#   unset caller_file bsname drname file
# }
